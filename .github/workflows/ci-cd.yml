name: CI/CD com Provisionamento

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  provision:
    name: Provisionar Infraestrutura AWS com Terraform
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: sa-east-1
      TF_VAR_public_key: ${{ secrets.TF_VAR_public_key }}
    outputs:
      ec2_ip: ${{ steps.ec2-ip.outputs.ec2_ip }}
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Inicializar Terraform
        run: terraform init
        working-directory: ./terraform

      - name: Validar configuração
        run: terraform validate
        working-directory: ./terraform

      - name: Planejar infraestrutura
        run: terraform plan -out=tfplan
        working-directory: ./terraform

      - name: Aplicar infraestrutura
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform

      - name: Obter IP público da instância EC2
        id: ec2-ip
        run: |
          IP=$(terraform -chdir=./terraform output -raw instance_public_ip)
          echo "ec2_ip=$IP" >> $GITHUB_OUTPUT

  build:
    name: Build e Testes
    runs-on: ubuntu-latest
    needs: provision
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar testes
        run: PYTHONPATH=. pytest tests/

  docker:
    name: Build Docker e Push
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build e Push imagem
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/aes-web:latest

  deploy:
    name: Deploy na EC2
    runs-on: ubuntu-latest
    needs: [docker, provision]
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ needs.provision.outputs.ec2_ip }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          debug: true
          request_pty: true
          script: |
            sudo systemctl start docker
            sudo docker info
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/aes-web:latest
            sudo docker run -d --name aes-web -p 80:5000 ${{ secrets.DOCKER_USERNAME }}/aes-web:latest
      - name: Obter outputs do Terraform
        id: terraform_outputs
        run: terraform output -raw instance_public_dns > dns.txt
        working-directory: ./terraform

      - name: Mostrar DNS público
        run: |
          echo "DNS público da instância: http://$(cat dns.txt)"